@model IEnumerable<ConferenceViewModel>
@inject IConferenceService conferences;
@inject ILecturerService lecturer;

@if (!Model.Any())
{
    <p class="text-center">Няма налични конференции.</p>
}

else
{
    <div class="row">
        @foreach (var conference in Model)
        {
            <div class="col-md-4 mb-4">
                <div class="card shadow-lg border-0 rounded-lg">
                    <div class="card-body p-4">
                        <h5 class="card-title text-primary">
                            <i class="fas fa-book-open"></i> @conference.Topic
                        </h5>
                        <h6 class="card-subtitle mb-3 text-muted">
                            <i class="fas fa-calendar-alt"></i> @conference.Start - @conference.End
                        </h6>
                        <p class="card-text">
                            <i class="fas fa-chalkboard-teacher"></i>
                            <strong>Lecturer:</strong> @conference.Lecturer.FirstName @conference.Lecturer.LastName
                        </p>

                        <div class="d-flex flex-column gap-2">
                            @if (await lecturer.HasLecturerConferenceAsync(User.Id(), conference.Id) ||
                                User.IsInRole(AdminRole))
                            {
                                <a class="btn btn-outline-primary" asp-area="" asp-controller="Conference" asp-action="Edit" asp-route-id="@conference.Id">
                                    <i class="fas fa-edit"></i> Редактирай
                                </a>
                                <a class="btn btn-outline-danger" asp-area="" asp-controller="Conference" asp-action="Delete" asp-route-id="@conference.Id">
                                    <i class="fas fa-trash"></i> Изтрий
                                </a>
                            }

                            <a class="btn btn-outline-info" asp-area="" asp-controller="Conference" asp-action="Details" asp-route-id="@conference.Id">
                                <i class="fas fa-info-circle"></i> Подробности
                            </a>

                            @{
                                DateTime.TryParse(conference.Start, out var startTime);
                                DateTime.TryParse(conference.End, out var endTime);
                                bool isOngoing = startTime <= DateTime.Now && endTime >= DateTime.Now;
                                bool hasEnded = endTime < DateTime.Now;
                                bool hasNotStarted = startTime > DateTime.Now;
                            }

                            @if (hasEnded)
                            {
                                <p class="text-muted">
                                    <i class="fas fa-hourglass-end"></i> Тази конференция приключи. Записването е затворено.
                                </p>
                            }
                            else
                            {
                                @if (await conferences.HasUserSignedUpAsync(conference.Id, User.Id()) &&
                                     !await lecturer.HasLecturerConferenceAsync(User.Id(), conference.Id))
                                {
                                    <form asp-area="" asp-controller="Conference" asp-action="Unregister" method="post">
                                        <input type="hidden" name="conferenceId" value="@conference.Id" />
                                        <button type="submit" class="btn btn-warning">
                                            <i class="fas fa-sign-out-alt"></i> Отпиши се
                                        </button>
                                    </form>

                                    @if (isOngoing)
                                    {
                                        <a class="btn btn-secondary mt-2" href="@conference.ConferenceUrl" target="_blank">
                                            <i class="fas fa-video"></i> Присъедини се
                                        </a>
                                    }
                                    else if (hasNotStarted)
                                    {
                                        <p class="text-warning">
                                            <i class="fas fa-clock"></i> Конференцията все още не е започнала.
                                        </p>
                                    }
                                }
                                else if (!await conferences.HasUserSignedUpAsync(conference.Id, User.Id()) &&
                                         !await lecturer.HasLecturerConferenceAsync(User.Id(), conference.Id))
                                {
                                    <form asp-area="" asp-controller="Conference" asp-action="SignUp" method="post">
                                        <input type="hidden" name="conferenceId" value="@conference.Id" />
                                        <button type="submit" class="btn btn-success">
                                            <i class="fas fa-user-plus"></i> Запиши се
                                        </button>
                                    </form>
                                } 
                            }            
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}