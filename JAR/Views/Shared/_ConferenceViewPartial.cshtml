@model IEnumerable<ConferenceViewModel>
@inject IConferenceService conferences;
@inject ILecturerService lecturer;

@if (!Model.Any())
{
    <p class="text-center">No conferences available.</p>
}
else
{
    <div class="row">
        @foreach (var conference in Model)
        {
            <div class="col-md-4 mb-4">
                <div class="card shadow-lg border-0 rounded-lg">
                    <div class="card-body p-4">
                        <h5 class="card-title text-primary">@conference.Topic</h5>
                        <h6 class="card-subtitle mb-3 text-muted">
                            @conference.Start - @conference.End
                        </h6>
                        <p class="card-text"><strong>Lecturer:</strong> @conference.Lecturer.FirstName @conference.Lecturer.LastName</p>

                        <div class="d-flex flex-column gap-2">
                            @if(await lecturer.HasLecturerConference(User.Id(), conference.Id) || 
                                User.IsInRole(AdminRole))
                            {
                                <a class="btn btn-outline-primary" asp-area="" asp-controller="Conference" asp-action="Edit" asp-route-id="@conference.Id">Edit</a>
                                <a class="btn btn-outline-danger" asp-area="" asp-controller="Conference" asp-action="Delete" asp-route-id="@conference.Id">Delete</a>
                            }

                            <a class="btn btn-outline-info" asp-area="" asp-controller="Conference" asp-action="Details" asp-route-id="@conference.Id">Details</a>

                            @{
                                DateTime.TryParse(conference.Start, out var startTime);
                                DateTime.TryParse(conference.End, out var endTime);
                                bool isOngoing = startTime <= DateTime.Now && endTime >= DateTime.Now;
                                bool hasEnded = endTime < DateTime.Now;
                                bool hasNotStarted = startTime > DateTime.Now;
                            }

                            @if (hasEnded)
                            {
                                <p class="text-muted">This conference has ended. Registration is closed.</p>
                            }
                            else
                            {
                                @if (await conferences.HasUserSignedUp(conference.Id, User.Id()))
                                {
                                    <form asp-area="" asp-controller="Conference" asp-action="Unregister" method="post">
                                        <input type="hidden" name="conferenceId" value="@conference.Id" />
                                        <button type="submit" class="btn btn-warning">Unregister</button>
                                    </form>
                                }
                                else
                                {
                                    <form asp-area="" asp-controller="Conference" asp-action="SignUp" method="post">
                                        <input type="hidden" name="conferenceId" value="@conference.Id" />
                                        <button type="submit" class="btn btn-success">Sign Up</button>
                                    </form>
                                }
                            }

                            @if (isOngoing)
                            {
                                <a class="btn btn-secondary mt-2" href="@conference.ConferenceUrl" target="_blank">Join</a>
                            }
                            else if (hasNotStarted)
                            {
                                <p class="text-warning">Conference has not started yet.</p>
                            }

                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}