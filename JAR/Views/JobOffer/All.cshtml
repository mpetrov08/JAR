@model JobOffersFilterModel;

@{
    ViewBag.Title = "Търсене на оферти за работа";
}

<h2 class="text-center text-primary mb-4">@ViewBag.Title</h2>
<hr />

<form method="get" asp-controller="JobOffer" asp-action="All">
    <div class="row">
        <div class="form-group col-md-3 mb-3">
            <label asp-for="SearchTerm" class="form-label"></label>
            <input asp-for="SearchTerm" class="form-control rounded" placeholder="Search for job..." />
        </div>

        <div class="form-group col-md-3 mb-3">
            <label asp-for="Category" class="form-label"></label>
            <select asp-for="Category" class="form-select rounded">
                <option value="">All Categories</option>
                @foreach (var category in Model.Categories)
                {
                    <option value="@category">@category</option>
                }
            </select>
        </div>

        <div class="form-group col-md-3 mb-3">
            <label asp-for="JobType" class="form-label"></label>
            <select asp-for="JobType" class="form-select rounded">
                <option value="">All Job Types</option>
                @foreach (var jobType in Model.JobTypes)
                {
                    <option value="@jobType">@jobType</option>
                }
            </select>
        </div>

        <div class="form-group col-md-3 mb-3">
            <label asp-for="Sorting" class="form-label"></label>
            <select asp-for="Sorting" class="form-select rounded">
                <option value="0">Newest</option>
                <option value="1">Highest Salary</option>
                <option value="2">Lowest Salary</option>
            </select>
        </div>

        <div class="col-md-12">
            <div class="form-group mt-3 text-center">
                <input type="submit" value="Search" class="btn btn-outline-primary btn-lg" />
            </div>
        </div>
    </div>
</form>

<hr />

@{
    var previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }

    var maxPage = Math.Ceiling((double)Model.TotalJobOffersCount / Model.JobOffersPerPage);
}

<partial name="_JobOfferViewPartial" model="@Model.JobOffers" />

<nav>
    <ul class="pagination justify-content-center">
        <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
            <a class="page-link"
               asp-controller="JobOffer"
               asp-action="All"
               asp-route-currentPage="@(Model.CurrentPage - 1)"
               asp-route-category="@Model.Category"
               asp-route-searchTerm="@Model.SearchTerm"
               asp-route-sorting="@((int)Model.Sorting)"
               tabindex="-1">Previous</a>
        </li>

        @for (var i = 1; i <= maxPage; i++)
        {
            <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                <a class="page-link"
                   asp-controller="JobOffer"
                   asp-action="All"
                   asp-route-currentPage="@i"
                   asp-route-category="@Model.Category"
                   asp-route-searchTerm="@Model.SearchTerm"
                   asp-route-sorting="@((int)Model.Sorting)">
                    @i
                </a>
            </li>
        }

        <li class="page-item @(Model.CurrentPage == maxPage ? "disabled" : "")">
            <a class="page-link"
               asp-controller="JobOffer"
               asp-action="All"
               asp-route-currentPage="@(Model.CurrentPage + 1)"
               asp-route-category="@Model.Category"
               asp-route-searchTerm="@Model.SearchTerm"
               asp-route-sorting="@((int)Model.Sorting)">
                Next
            </a>
        </li>
    </ul>
</nav>

@section Styles {
    <link rel="stylesheet" href="~/css/jobOffer/allJobOffers.css">
    <link rel="stylesheet" href="~/css/jobOffer/viewJobOffer.css">
}