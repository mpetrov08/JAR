@model JobOfferDetailsViewModel
@inject IJobOfferService jobOffer;
@inject ICompanyService company;
@inject IJobApplicationService jobApplication;

@{
    ViewBag.Title = "Job Offer Details";
}

<h2 class="text-center text-primary mb-4">@ViewBag.Title</h2>
<hr />

<div class="container">
    <div class="row justify-content-center">
        <div class="card col-md-10 col-lg-8 shadow-lg rounded border-0">
            <div class="card-body">
                <div class="text-center mb-4">
                    @if (!string.IsNullOrEmpty(Model.Company.LogoUrl))
                    {
                        <img src="@Model.Company.LogoUrl" alt="@Model.Company.Name Logo" class="img-fluid rounded-circle" style="max-width: 250px; height: auto; transition: transform 0.3s ease;" />
                    }
                    <h3 class="text-primary mt-3">@Model.Title</h3>
                    <p class="text-muted"><i class="fas fa-calendar-alt"></i> Created on: @Model.CreatedOn</p>
                </div>

                <hr />

                <div class="mb-4">
                    <h4 class="text-secondary"><i class="fas fa-clipboard-list"></i> Job Description</h4>
                    <div>@Html.Raw(Model.Description.RemoveHtmlXss())</div>
                </div>

                <div class="mb-4">
                    <h4 class="text-secondary"><i class="fas fa-info-circle"></i> Job Details</h4>
                    <ul class="list-unstyled">
                        <li><i class="fas fa-map-marker-alt"></i> <strong>Address:</strong> @Model.Address</li>
                        <li><i class="fas fa-th-large"></i> <strong>Category:</strong> @Model.Category</li>
                        <li><i class="fas fa-briefcase"></i> <strong>Job Type:</strong> @Model.JobType</li>
                        @if (!string.IsNullOrEmpty(Model.RequiredLanguage))
                        {
                            <li><i class="fas fa-language"></i> <strong>Required Language:</strong> @Model.RequiredLanguage</li>
                        }
                        @if (!string.IsNullOrEmpty(Model.RequiredDegree))
                        {
                            <li><i class="fas fa-graduation-cap"></i> <strong>Required Degree:</strong> @Model.RequiredDegree</li>
                        }
                        @if (!string.IsNullOrEmpty(Model.RequiredExperience))
                        {
                            <li><i class="fas fa-briefcase"></i> <strong>Required Experience:</strong> @Model.RequiredExperience</li>
                        }
                        <li><i class="fas fa-cogs"></i> <strong>Required Skills:</strong> @Model.RequiredSkills</li>
                        <li><i class="fas fa-dollar-sign"></i> <strong>Salary:</strong> @Model.Salary</li>
                    </ul>
                </div>

                <div class="mb-4">
                    <h4 class="text-secondary"><i class="fas fa-building"></i> Company Details</h4>
                    <h5 class="text-center text-primary">@Model.Company.Name</h5>
                    <ul class="list-unstyled">
                        <li><i class="fas fa-file-alt"></i> <strong>Description:</strong> @Html.Raw(Model.Company.Description)</li>
                        <li><i class="fas fa-map-marker-alt"></i> <strong>Address:</strong> @Model.Company.Address</li>
                        <li><i class="fas fa-phone"></i> <strong>Phone:</strong> @Model.Company.PhoneNumber</li>
                        <li><i class="fas fa-envelope"></i> <strong>Email:</strong> @Model.Company.Email</li>
                        <li><i class="fas fa-user"></i> <strong>Owner:</strong> @Model.Company.OwnerName</li>
                    </ul>
                </div>

                <div class="form-group d-flex justify-content-around">
                    @if (await jobOffer.HasCompanyWithIdAsync(Model.Id, User.Id()))
                    {
                        <a class="btn btn-outline-primary btn-lg shadow-sm hover-scale-up" asp-controller="JobOffer" asp-action="Edit" asp-route-id="@Model.Id">
                            <i class="fas fa-edit"></i> Edit
                        </a>
                        <a class="btn btn-outline-danger btn-lg shadow-sm hover-scale-up" asp-controller="JobOffer" asp-action="Delete" asp-route-id="@Model.Id">
                            <i class="fas fa-trash-alt"></i> Delete
                        </a>
                    }

                    @if (!await company.OwnerCompanyExistsAsync(User.Id()) && User.Identity.IsAuthenticated)
                    {
                        <a class="btn btn-outline-success" asp-area="" asp-controller="Rooms" asp-action="Create" asp-route-name="@Model.Title" asp-route-companyOwnerId="Model.CompanyOwnerId">
                            <i class="fas fa-comment-dots"></i> Start Chat
                        </a>

                        @if (await jobApplication.HasUserAlreadyAppliedAsync(Model.Id, User.Id()))
                        {
                            <a class="btn btn-outline-primary" asp-area="" asp-controller="JobApplication" asp-action="CheckStatus" asp-route-jobId="@Model.Id">
                                <i class="fas fa-check-circle"></i> Check Status
                            </a>
                        }
                        else
                        {
                            <a class="btn btn-outline-primary" asp-area="" asp-controller="JobApplication" asp-action="Apply" asp-route-id="@Model.Id">
                                <i class="fas fa-paper-plane"></i> Apply for Job
                            </a>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial"></partial>
}